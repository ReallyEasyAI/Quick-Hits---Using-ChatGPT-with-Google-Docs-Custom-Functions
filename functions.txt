/**
 * Sends the contents of a cell or text to ChatGPT as a prompt
 * @param {String} input The prompt to send.
 * @return ChatGPT Response.
 * @customfunction
 */
function ChatGPT(input) {
  console.log(input)
  const systemContent = "You are a helpful assistant.";
  return Array.isArray(input) ?
    input.flat().map(text => fetchData(systemContent, text)) :
    fetchData(systemContent, input);

}


// This function runs automatically when the document is opened, adding the custom menu.
function onOpen() {
  DocumentApp.getUi().createMenu('ChatGPT')
    .addItem('Ask ChatGPT', 'showPromptDialog')
    .addToUi();
}

// This function shows a dialog asking the user for input to send to ChatGPT.
function showPromptDialog() {
  var ui = DocumentApp.getUi();
  var result = ui.prompt('Ask ChatGPT', 'Enter your question or prompt:', ui.ButtonSet.OK_CANCEL);

  // Process the user's response.
  if (result.getSelectedButton() == ui.Button.OK) {
    var userInput = result.getResponseText();
    if (userInput) {
      callChatGPTAndInsertResponse(userInput);
    }
  }
}

// This function calls the ChatGPT function and inserts the response at the cursor's location.
function callChatGPTAndInsertResponse(input) {
  var response = ChatGPT(input); // Assuming this function is asynchronous, you might need to handle it accordingly.
  insertTextAtCursor(response);
}

// Helper function to insert text at the current cursor position in the document.
function insertTextAtCursor(text) {
  var document = DocumentApp.getActiveDocument();
  var cursor = document.getCursor();
  if (cursor) {
    // Attempt to insert text at the cursor position.
    var position = cursor.getSurroundingTextOffset();
    cursor.getSurroundingText().insertText(position, text);
  } else {
    DocumentApp.getUi().alert('Cannot find a cursor in the document.');
  }
}
